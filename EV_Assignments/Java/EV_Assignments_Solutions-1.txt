/* 1. The program should take input for the number of students.
For each student ,it should take input for their exam score(out of 100).
Grading criteria:
•    Scores greater than or equal to 90: Grade A.
•    Scores between 80 and 89 : Grade B
•    Scores between 70 to 79: Grade C
•    Scores between 60 and 69 :Grade D
•    Scores below 60:Grade F
Output format: This each clearly defines the input format, grading criteria , and output format for the problem statement.
*/

import java.util.Scanner;
public class Students_grades {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the number of students: ");
        int numStudents = scanner.nextInt();
        int[] scores = new int[numStudents];
        char[] grades = new char[numStudents];
        for (int i = 0; i < numStudents; i++) {
            System.out.print("Enter the score for student " + (i + 1) + ": ");
            scores[i] = scanner.nextInt();
        }
        for (int i = 0; i < numStudents; i++) {
            if (scores[i] >= 90) {
                grades[i] = 'A';
            } else if (scores[i] >= 80) {
                grades[i] = 'B';
            } else if (scores[i] >= 70) {
                grades[i] = 'C';
            } else if (scores[i] >= 60) {
                grades[i] = 'D';
            } else if (scores[i] >= 50) {
                grades[i] = 'E';
            } else {
            	grades[i] = 'F';
            } 
        }
        System.out.println("Grades:");
        for (int i = 0; i < numStudents; i++) {
            System.out.println("Student " + (i + 1) + ": " + grades[i]);
        }
        scanner.close();
    }
}

// 2. Program to write the given number is palindrome or not.

import java.util.Scanner;
public class Palindrome {
    public static boolean isPalindrome(int number) {
        int reversedNumber = 0;
        int originalNumber = number;       
        while(number != 0) {
            int digit = number % 10;
            reversedNumber = reversedNumber * 10 + digit;
            number /= 10;
        }   
        return originalNumber == reversedNumber;
    }
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a number to check if it's a palindrome: ");
        int number = scanner.nextInt();
        
        if(isPalindrome(number)) {
            System.out.println(number + " is a palindrome.");
        } else {
            System.out.println(number + " is not a palindrome.");
        }
        scanner.close();
    }
}

// 3. Program to generate the prime numbers between ranges.

import java.util.Scanner;
public class Prime_no {
	public static boolean isPrime(int number) {
        if (number <= 1) {
            return false;
        }
        for (int i = 2; i <= Math.sqrt(number); i++) {
            if (number % i == 0) {
                return false;
            }
        }
        return true;
    }
	public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the starting number of the range: ");
        int start = scanner.nextInt();
        System.out.print("Enter the ending number of the range: ");
        int end = scanner.nextInt();
        
        System.out.println("Prime numbers between " + start + " and " + end + ":");
        for (int i = start; i <= end; i++) {
            if (isPrime(i)) {
                System.out.print(i + " ");
            }
        }
        scanner.close();
    } 
}

// 4. Write a program to converts the binary numbers to its decimal equivalent.

import java.util.Scanner;
public class Binary_To_Decimal {
    public static int binaryToDecimal(String binary) {
        int decimal = 0;
        int length = binary.length();      
        for (int i = 0; i < length; i++) {
            char digit = binary.charAt(i);
            if (digit == '1') {
                decimal += Math.pow(2, length - i - 1);
            } else if (digit != '0') {
                return -1;
            }
        }
        return decimal;
    }
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a binary number: ");
        String binaryString = scanner.nextLine();
        int decimal = binaryToDecimal(binaryString);      
        System.out.println("Decimal equivalent: " + decimal);       
        scanner.close();
    }
}

// 5. Implement a program to check whether a given year is a leap year or not.

import java.util.Scanner;
public class Leap_year {
	public static boolean isLeapYear(int year) {
        if (year % 4 == 0) {
            if (year % 100 == 0) {
                return year % 400 == 0;
            } else {
                return true;
            }
        }
        return false;
    }
	public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a year: ");
        int year = scanner.nextInt();        
        if (isLeapYear(year)) {
            System.out.println(year + " is a leap year.");
        } else {
            System.out.println(year + " is not a leap year.");
        }       
        scanner.close();
    }
}